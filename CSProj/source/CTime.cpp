/***********************************************************************/
/*! @file  CTime.cpp
 *  @brief 時間クラス
 *  
 *  @author 川原　佑介
 *  @date	
 */
/***********************************************************************/
#include"CTime.h"



/***********************************************************************/
/*! @brief デフォルトコンストラクタ
 */
/***********************************************************************/
CTimer::CTimer()
{
	init();
}

/***********************************************************************/
/*! @brief デストラクタ
 */
/***********************************************************************/
CTimer::~CTimer()
{
}


/***********************************************************************/
/*! @brief 初期化関数
 * 
 *  @retval void
 */
/***********************************************************************/
void CTimer::init()
{
	timeBeginPeriod(1);
	_ulExecLastTime = _ulFPSLastTime  = timeGetTime();
	_ulCurrentTime  = _ulFrameCount   = 0;
	_ulTotalElapFrame = 0;
	_ulFrameCount = 0;
	_ulFPS = 0;
}

/***********************************************************************/
/*! @brief 更新関数
 * 
 *  @retval void
 */
/***********************************************************************/
void CTimer::update()
{
	//現在時刻の更新
	_ulCurrentTime = timeGetTime();

	//ＦＰＳカウントの更新
	if((_ulCurrentTime - _ulFPSLastTime) >= 1000)
	{
		_ulFPSLastTime = _ulCurrentTime;
		_ulFPS = _ulFrameCount;
		_ulFrameCount = 0;
	}
}

/***********************************************************************/
/*! @brief FPSの取得
 * 
 *  @retval const ulong FPS取得
 */
/***********************************************************************/
const ulong CTimer::getFPS()
{
	return _ulFPS;
}
/***********************************************************************/
/*! @brief 現在時刻の取得
* 
*  @retval const ulong 現在時刻
*/
/***********************************************************************/
const ulong CTimer::getCurrentTime(){return _ulCurrentTime;}

/***********************************************************************/
/*! @brief 現在フレームを更新
 * 
 *  @retval true 　次のフレームへ更新
 *  @retval false  更新なし
 */
/***********************************************************************/
bool CTimer::updateFrame()
{
	if((_ulCurrentTime - _ulExecLastTime) >= FRAME_RATE)
	{
		++_ulFrameCount;
		_ulExecLastTime = _ulCurrentTime;
		return true;
	}

	return false;
}


/***********************************************************************/
/*! @brief 総経過フレーム数取得
 * 
 *  @retval const ulong 総経過フレーム数
 */
/***********************************************************************/
const ulong CTimer::getTotalElapFrame()
{
	return _ulTotalElapFrame;
}


/***********************************************************************/
/*! @brief 総経過フレーム数取得
 * 
 *  @retval const ulong 総経過フレーム数
 */
/***********************************************************************/
const ulong CTimer::getTotalElapFrame()const
{
	return _ulTotalElapFrame;
}


/***********************************************************************/
/*! @brief 総経過フレーム加算
 * 
 *  @retval void
 */
/***********************************************************************/
void CTimer::countupTotalElapFrame()
{
	++_ulTotalElapFrame;
}
